import requests
import time
import pandas as pd
from datetime import datetime, timedelta

# üëâ –í–°–¢–ê–í–¨ —Å—é–¥–∞ —Å–≤–æ–π —Å–µ—Ä–≤–∏—Å–Ω—ã–π –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞
TOKEN = "56bb3d8356bb3d8356bb3d8381558cd7fb556bb56bb3d833e349bfe86257f84d0c1dbef"
API_URL = "https://api.vk.com/method/"
VERSION = "5.199"

# –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å–æ–æ–±—â–µ—Å—Ç–≤
SEARCH_QUERIES = ["–∫—É—Ö–Ω–∏", "–∫—É—Ö–Ω–∏ –Ω–∞ –∑–∞–∫–∞–∑", "–º–µ–±–µ–ª—å", "–∫–æ—Ä–ø—É—Å–Ω–∞—è –º–µ–±–µ–ª—å"]

# –°–∫–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ—Å—Ç–≤ –±—Ä–∞—Ç—å –Ω–∞ –∫–∞–∂–¥—ã–π –∑–∞–ø—Ä–æ—Å
PER_QUERY = 100

# –û—Ç—Å–µ—á–∫–∞ –ø–æ –¥–∞—Ç–µ (–ø–æ—Å—Ç—ã –Ω–µ —Å—Ç–∞—Ä—à–µ –º–µ—Å—è—Ü–∞)
cutoff_date = int((datetime.now() - timedelta(days=30)).timestamp())

results = []

def vk_api(method, params):
    params.update({"access_token": TOKEN, "v": VERSION})
    r = requests.get(API_URL + method, params=params).json()
    if "response" in r:
        return r["response"]
    else:
        print("–û—à–∏–±–∫–∞:", r)
        return None

print("üîç –ò—â–µ–º —Å–æ–æ–±—â–µ—Å—Ç–≤–∞...")

for query in SEARCH_QUERIES:
    groups = vk_api("groups.search", {
        "q": query,
        "count": PER_QUERY,
        "country_id": 1  # –†–§
    })
    if not groups:
        continue

    for g in groups["items"]:
        group_id = g["id"]

        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥—Ä—É–ø–ø–µ (–≤–∫–ª—é—á–∞—è –∫–æ–Ω—Ç–∞–∫—Ç—ã)
        info = vk_api("groups.getById", {
            "group_id": group_id,
            "fields": "contacts,activity,members_count,screen_name"
        })
        if not info:
            continue
        group = info[0]

        contacts = group.get("contacts", [])
        if not contacts:  # –±–µ–∑ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
            continue

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤–µ–∂–µ—Å—Ç—å –ø–æ—Å—Ç–∞
        wall = vk_api("wall.get", {"owner_id": -group_id, "count": 1})
        if not wall or wall["count"] == 0:
            continue
        last_post = wall["items"][0]
        if last_post["date"] < cutoff_date:
            continue

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
        for c in contacts:
            results.append({
                "group_id": group_id,
                "group_name": group["name"],
                "group_url": f"https://vk.com/{group.get('screen_name')}",
                "members_count": group.get("members_count", 0),
                "contact_id": c.get("user_id"),
                "desc": c.get("desc")
            })

        print(f"‚úÖ {group['name']} ‚Äî –¥–æ–±–∞–≤–ª–µ–Ω–æ")

        time.sleep(0.34)  # —á—Ç–æ–±—ã –Ω–µ –ø—Ä–µ–≤—ã—Å–∏—Ç—å –ª–∏–º–∏—Ç API

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ CSV
df = pd.DataFrame(results)
df.to_csv("all_mebel_aktiv.csv", index=False, encoding="utf-8-sig")

print("üî• –ì–æ—Ç–æ–≤–æ! –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ:", len(results), "–∑–∞–ø–∏—Å–µ–π –≤ all_mebel_aktiv.csv")
